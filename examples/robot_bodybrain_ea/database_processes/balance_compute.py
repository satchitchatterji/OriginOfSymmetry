import numpy as np 

from revolve2.modular_robot._body_state import BodyState
from pyrr import Quaternion, Vector3


def get_body_states_from_str(single_robot_body_state_str):
    # generate body states from the string of form:
    try:
        body_states = eval(single_robot_body_state_str) # eval() converts string to list of BodyState objects
    except Exception as e:
        print(f"Error: could not convert {single_robot_body_state_str} to list of BodyState objects.")
        return None
    
    return body_states

def get_pitch_yaw_roll(q):
    # q is a quarternion, such as the core_orientation of a BodyState object
    yaw = np.arctan2(2.0*(q.y*q.z + q.w*q.x), q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z);
    pitch = np.arcsin(-2.0*(q.x*q.z - q.w*q.y));
    roll = np.arctan2(2.0*(q.x*q.y + q.w*q.z), q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z);
    return np.array([pitch, yaw, roll])

def compute_balance(body_states, t):
    # computes balance for a single robot over run as per Kargar, Miras, & Eiben (2021)
    # t: step number
    pyr = np.array([get_pitch_yaw_roll(bs.core_orientation) for bs in body_states])
    accumulated_roll = np.sum(pyr[:,2])
    accumulated_pitch = np.sum(pyr[:,0])

    # compute balance
    balance = 1 - (accumulated_roll+accumulated_pitch)/(2*np.pi*t)

    return balance

def compute_balance_from_str(single_robot_body_state_str, t):
    # computes balance for a single robot over run as per Kargar, Miras, & Eiben (2021)
    body_states = get_body_states_from_str(single_robot_body_state_str)
    balance = compute_balance(body_states, t)
    return balance

def compute_balance_from_str_list(robot_states_str_list):
    # computes balance for a single robot over run as per Kargar, Miras, & Eiben (2021)
    balance_list = []

    for single_robot_body_state_str in robot_states_str_list:
        try:
            balance_list.append(compute_balance_from_str(single_robot_body_state_str, len(single_robot_body_state_str)))
        except Exception as e:
            print("Error: could not compute balance from string.")
            print(e)

    return balance_list

if __name__ == "__main__":
    test_list = ["[BodyState(core_position=Vector3([0.        , 0.        , 0.09432938]), core_orientation=Quaternion([1., 0., 0., 0.])), BodyState(core_position=Vector3([-0.02491895,  0.00748456,  0.08047686]), core_orientation=Quaternion([ 0.98963152, -0.04311372, -0.13683821,  0.0067799 ])), BodyState(core_position=Vector3([-0.02147691, -0.02038529,  0.07914665]), core_orientation=Quaternion([ 0.98060622,  0.02192024, -0.12852746,  0.14632716])), BodyState(core_position=Vector3([-0.01569379, -0.0385407 ,  0.07830706]), core_orientation=Quaternion([ 0.95121337,  0.03892757, -0.13141096,  0.27642165])), BodyState(core_position=Vector3([-0.01454655, -0.05286283,  0.07570754]), core_orientation=Quaternion([ 0.92241368,  0.05738444, -0.14348837,  0.35393659])), BodyState(core_position=Vector3([-0.01523606, -0.05566652,  0.07458985]), core_orientation=Quaternion([ 0.9164956 ,  0.06165437, -0.14966014,  0.36583656])), BodyState(core_position=Vector3([-0.01570863, -0.04353266,  0.07762387]), core_orientation=Quaternion([ 0.94248464,  0.04511444, -0.13395071,  0.30289371])), BodyState(core_position=Vector3([-0.01756799, -0.02606897,  0.07950274]), core_orientation=Quaternion([ 0.97189362,  0.02618972, -0.12580584,  0.1972556 ])), BodyState(core_position=Vector3([-0.02415322, -0.01140831,  0.07905547]), core_orientation=Quaternion([ 0.98737969,  0.01022596, -0.13094634,  0.08848629])), BodyState(core_position=Vector3([-0.03077485, -0.0014249 ,  0.07740562]), core_orientation=Quaternion([ 9.89663521e-01, -2.44258688e-04, -1.42795807e-01,1.32443922e-02])), BodyState(core_position=Vector3([-0.03186221,  0.00686371,  0.07727288]), core_orientation=Quaternion([ 0.98866487, -0.00780429, -0.14353256, -0.04335054])), BodyState(core_position=Vector3([-0.03082503,  0.00955204,  0.07770059]), core_orientation=Quaternion([ 0.98819191, -0.00999693, -0.14003359, -0.06137918])), BodyState(core_position=Vector3([-0.02729171,  0.00221504,  0.0791334 ]), core_orientation=Quaternion([ 0.99137201, -0.00338011, -0.13056285, -0.01111141])), BodyState(core_position=Vector3([-0.02278688, -0.0134373 ,  0.0798622 ]), core_orientation=Quaternion([ 0.98733228,  0.01229984, -0.12548494,  0.09631832])), BodyState(core_position=Vector3([-0.02312594, -0.03377334,  0.07798384]), core_orientation=Quaternion([ 0.96461674,  0.0324374 , -0.13535926,  0.22392014])), BodyState(core_position=Vector3([-0.02041816, -0.04549738,  0.07686564]), core_orientation=Quaternion([ 0.94302422,  0.0447264 , -0.13922847,  0.29886503])), BodyState(core_position=Vector3([-0.01809145, -0.04890741,  0.07668981]), core_orientation=Quaternion([ 0.93475439,  0.04960785, -0.13917435,  0.32311576])), BodyState(core_position=Vector3([-0.01621567, -0.05405046,  0.07585811]), core_orientation=Quaternion([ 0.92246485,  0.05690894, -0.14263775,  0.35422371])), BodyState(core_position=Vector3([-0.01547022, -0.05841868,  0.07477172]), core_orientation=Quaternion([ 0.91186673,  0.06353162, -0.14779955,  0.37764812])), BodyState(core_position=Vector3([-0.01662734, -0.0443469 ,  0.07842619]), core_orientation=Quaternion([ 0.94265517,  0.04337225, -0.12867785,  0.30489685])), BodyState(core_position=Vector3([-0.02230024, -0.02359249,  0.07991463]), core_orientation=Quaternion([ 0.97821102,  0.02078075, -0.12396901,  0.16523635])), BodyState(core_position=Vector3([-0.03029044, -0.00399685,  0.0789796 ]), core_orientation=Quaternion([ 0.99100557,  0.00242653, -0.13253645,  0.01833475])), BodyState(core_position=Vector3([-0.03778237,  0.01491512,  0.07597469]), core_orientation=Quaternion([ 0.9827637 , -0.01831306, -0.15158218, -0.10422567])), BodyState(core_position=Vector3([-0.04253203,  0.02430648,  0.07285393]), core_orientation=Quaternion([ 0.97211075, -0.03028125, -0.17079212, -0.15784102])), BodyState(core_position=Vector3([-0.04261244,  0.02338942,  0.07296229]), core_orientation=Quaternion([ 0.97291861, -0.02893543, -0.1704979 , -0.15337075])), BodyState(core_position=Vector3([-0.03600181,  0.01001442,  0.07699172]), core_orientation=Quaternion([ 0.98652889, -0.01326199, -0.14502912, -0.0745079 ])), BodyState(core_position=Vector3([-0.02883594, -0.0058766 ,  0.0793791 ]), core_orientation=Quaternion([ 0.99109463,  0.00287034, -0.12902727,  0.03278961])), BodyState(core_position=Vector3([-0.02574369, -0.02066846,  0.07937287]), core_orientation=Quaternion([ 0.98249979,  0.018074  , -0.12819418,  0.13391694])), BodyState(core_position=Vector3([-0.0256689 , -0.03435624,  0.07798337]), core_orientation=Quaternion([ 0.96587258,  0.03217807, -0.13521409,  0.21856778])), BodyState(core_position=Vector3([-0.02220831, -0.04011438,  0.07821517]), core_orientation=Quaternion([ 0.95499261,  0.03641606, -0.13185175,  0.26320733])), BodyState(core_position=Vector3([-0.0206719, -0.0411287,  0.0785707]), core_orientation=Quaternion([ 0.95265597,  0.03752867, -0.12878019,  0.27286236])), BodyState(core_position=Vector3([-0.02172612, -0.03172092,  0.07958922]), core_orientation=Quaternion([ 0.96876156,  0.02868191, -0.12428345,  0.21267818])), BodyState(core_position=Vector3([-0.02651337, -0.01687874,  0.07956449]), core_orientation=Quaternion([ 0.98585085,  0.01362715, -0.12746359,  0.1080066 ])), BodyState(core_position=Vector3([-0.03557422, -0.00161116,  0.07704588]), core_orientation=Quaternion([ 0.98930989, -0.0021493 , -0.14568087, -0.00619809])), BodyState(core_position=Vector3([-0.03573655,  0.00336263,  0.07692998]), core_orientation=Quaternion([ 0.98853432, -0.00652246, -0.14560141, -0.03946635])), BodyState(core_position=Vector3([-0.03552395,  0.00826733,  0.07677327]), core_orientation=Quaternion([ 0.98662134, -0.01226302, -0.14666987, -0.07011355])), BodyState(core_position=Vector3([-0.03633803,  0.01395613,  0.07601992]), core_orientation=Quaternion([ 0.98273345, -0.01840614, -0.1512517 , -0.10497194])), BodyState(core_position=Vector3([-0.0371816 ,  0.01713253,  0.0753978 ]), core_orientation=Quaternion([ 0.97989095, -0.02228074, -0.15502561, -0.12362994])), BodyState(core_position=Vector3([-0.02853633, -0.00253536,  0.07946314]), core_orientation=Quaternion([ 9.91677946e-01, -7.72913917e-04, -1.28740904e-01,-1.81117905e-04])), BodyState(core_position=Vector3([-0.02476709, -0.02441743,  0.07947842]), core_orientation=Quaternion([ 0.98081464,  0.01911104, -0.12749632,  0.14622619])), BodyState(core_position=Vector3([-0.01867236, -0.04457811,  0.078246  ]), core_orientation=Quaternion([ 0.9480269 ,  0.0403386 , -0.13153326,  0.28690903])), BodyState(core_position=Vector3([-0.01685642, -0.06163143,  0.07457073]), core_orientation=Quaternion([ 0.91186173,  0.06405431, -0.14900396,  0.37709819])), BodyState(core_position=Vector3([-0.01668544, -0.06872732,  0.07197882]), core_orientation=Quaternion([ 0.8950751 ,  0.07647226, -0.16208146,  0.40831624])), BodyState(core_position=Vector3([-0.01714487, -0.06520903,  0.07325109]), core_orientation=Quaternion([ 0.90353349,  0.06986831, -0.15622845,  0.39285917])), BodyState(core_position=Vector3([-0.01809157, -0.05062955,  0.07745714]), core_orientation=Quaternion([ 0.93638294,  0.04800509, -0.13420444,  0.32073615])), BodyState(core_position=Vector3([-0.02070735, -0.03320381,  0.0795127 ]), core_orientation=Quaternion([ 0.9680458 ,  0.02849268, -0.12523827,  0.21538539])), BodyState(core_position=Vector3([-0.02699536, -0.01994401,  0.07918181]), core_orientation=Quaternion([ 0.98457286,  0.01379947, -0.12968493,  0.11665192])), BodyState(core_position=Vector3([-0.03318657, -0.00801715,  0.07820662]), core_orientation=Quaternion([ 0.99023959,  0.00260999, -0.13715864,  0.02462201])), BodyState(core_position=Vector3([-0.03328696, -0.00157957,  0.07822685]), core_orientation=Quaternion([ 0.99043255, -0.00391481, -0.13671902, -0.01832898])), BodyState(core_position=Vector3([-0.0325545 , -0.00142446,  0.07851567]), core_orientation=Quaternion([ 0.99069353, -0.00436343, -0.13480532, -0.01829813])), BodyState(core_position=Vector3([-0.02814191, -0.01211242,  0.07949653]), core_orientation=Quaternion([ 0.99007641,  0.00603204, -0.12805444,  0.05757064])), BodyState(core_position=Vector3([-0.02502388, -0.02812701,  0.07931136]), core_orientation=Quaternion([ 0.97714503,  0.02208593, -0.12826932,  0.16806781])), BodyState(core_position=Vector3([-0.0250267 , -0.04654257,  0.07647333]), core_orientation=Quaternion([ 0.94956171,  0.04315026, -0.14318321,  0.27562509])), BodyState(core_position=Vector3([-0.022891  , -0.04842279,  0.07691436]), core_orientation=Quaternion([ 0.94467083,  0.04366325, -0.1391654 ,  0.29380866])), BodyState(core_position=Vector3([-0.01985452, -0.05267291,  0.0768656 ]), core_orientation=Quaternion([ 0.93460484,  0.04982249, -0.13796599,  0.32403224])), BodyState(core_position=Vector3([-0.01757988, -0.05793863,  0.07614797]), core_orientation=Quaternion([ 0.92161255,  0.05672105, -0.14053307,  0.35730029])), BodyState(core_position=Vector3([-0.0174904 , -0.05177742,  0.07795267]), core_orientation=Quaternion([ 0.93452185,  0.04769762, -0.13066663,  0.32759745])), BodyState(core_position=Vector3([-0.02093173, -0.03237243,  0.07992259]), core_orientation=Quaternion([ 0.97021102,  0.0262721 , -0.12293289,  0.20709382])), BodyState(core_position=Vector3([-0.0282808 , -0.01294491,  0.07923698]), core_orientation=Quaternion([ 0.98942565,  0.00827071, -0.13036675,  0.06303169])), BodyState(core_position=Vector3([-0.03478575,  0.00623528,  0.07674168]), core_orientation=Quaternion([ 0.98699181, -0.01125693, -0.14716423, -0.06374272])), BodyState(core_position=Vector3([-0.03845243,  0.01426285,  0.07455842]), core_orientation=Quaternion([ 0.98030505, -0.02076553, -0.16093083, -0.1125703 ])), BodyState(core_position=Vector3([-0.04220094,  0.02062555,  0.0718503 ]), core_orientation=Quaternion([ 0.97240388, -0.02925255, -0.17767766, -0.14834292])), BodyState(core_position=Vector3([-0.04027125,  0.0163455 ,  0.07336216]), core_orientation=Quaternion([ 0.97740515, -0.02373415, -0.16860784, -0.1252488 ])), BodyState(core_position=Vector3([-0.03177898,  0.00074198,  0.077873  ]), core_orientation=Quaternion([ 0.9898044 , -0.00613696, -0.13939394, -0.02861678])), BodyState(core_position=Vector3([-0.02463787, -0.01506649,  0.07955389]), core_orientation=Quaternion([ 0.98827962,  0.00987269, -0.12764791,  0.08313807])), BodyState(core_position=Vector3([-0.0212484 , -0.03202895,  0.07899068]), core_orientation=Quaternion([ 0.9709428 ,  0.02694317, -0.12955311,  0.19939946])), BodyState(core_position=Vector3([-0.01592147, -0.04413505,  0.07838029]), core_orientation=Quaternion([ 0.94743372,  0.03935846, -0.13078574,  0.28933605])), BodyState(core_position=Vector3([-0.01234102, -0.05029054,  0.07779739]), core_orientation=Quaternion([ 0.93277348,  0.04744196, -0.13135879,  0.33230672])), BodyState(core_position=Vector3([-0.01278788, -0.04871186,  0.07803594]), core_orientation=Quaternion([ 0.93694604,  0.04665417, -0.13036287,  0.32087541])), BodyState(core_position=Vector3([-0.01567624, -0.03426417,  0.07953038]), core_orientation=Quaternion([ 0.96423529,  0.0300364 , -0.12498836,  0.23178878])), BodyState(core_position=Vector3([-0.02396563, -0.01844967,  0.07902745]), core_orientation=Quaternion([ 0.98515197,  0.01323165, -0.13092877,  0.11026414])), BodyState(core_position=Vector3([-0.03391356, -0.00533646,  0.07645655]), core_orientation=Quaternion([ 9.88741159e-01, -8.75988098e-04, -1.49348770e-01,9.22484387e-03])), BodyState(core_position=Vector3([-0.03348562, -0.00243003,  0.07690038]), core_orientation=Quaternion([ 0.9892137 , -0.00281363, -0.14603798, -0.01101143])), BodyState(core_position=Vector3([-0.03374809,  0.00335268,  0.07677812]), core_orientation=Quaternion([ 0.98798679, -0.00915605, -0.14688955, -0.0471353 ])), BodyState(core_position=Vector3([-0.03407614,  0.00793253,  0.0765091 ]), core_orientation=Quaternion([ 0.98599835, -0.01381123, -0.14831238, -0.07496629])), BodyState(core_position=Vector3([-0.02630517, -0.00658057,  0.07934708]), core_orientation=Quaternion([ 0.99135345,  0.00137927, -0.12919139,  0.02293526])), BodyState(core_position=Vector3([-0.02119256, -0.02675298,  0.07960455]), core_orientation=Quaternion([ 0.97860519,  0.02094816, -0.12626459,  0.16109102])), BodyState(core_position=Vector3([-0.01569376, -0.04789305,  0.07822406]), core_orientation=Quaternion([ 0.94218229,  0.04266512, -0.13112863,  0.30541367])), BodyState(core_position=Vector3([-0.01306388, -0.06149777,  0.07573915]), core_orientation=Quaternion([ 0.91153775,  0.06079857, -0.1415801 ,  0.38125783])), BodyState(core_position=Vector3([-0.01194199, -0.06766902,  0.0741928 ]), core_orientation=Quaternion([ 0.89614334,  0.07087129, -0.14867983,  0.41206635])), BodyState(core_position=Vector3([-0.01163764, -0.07404615,  0.07184992]), core_orientation=Quaternion([ 0.88011478,  0.08211062, -0.16023482,  0.43929561])), BodyState(core_position=Vector3([-0.01211445, -0.07081187,  0.07304153]), core_orientation=Quaternion([ 0.88835949,  0.07622194, -0.1547926 ,  0.42549604])), BodyState(core_position=Vector3([-0.01445958, -0.05347179,  0.07780749]), core_orientation=Quaternion([ 0.93010889,  0.04981161, -0.13092262,  0.33952248])), BodyState(core_position=Vector3([-0.01845091, -0.03447186,  0.079769  ]), core_orientation=Quaternion([ 0.96680777,  0.02835677, -0.12363624,  0.22179429])), BodyState(core_position=Vector3([-0.02859395, -0.01762965,  0.07867299]), core_orientation=Quaternion([ 0.98700905,  0.01034149, -0.13363749,  0.08858444])), BodyState(core_position=Vector3([-0.03058961, -0.00609108,  0.07839373]), core_orientation=Quaternion([ 9.90664866e-01, -4.09768530e-04, -1.36037868e-01,8.75526170e-03])), BodyState(core_position=Vector3([-0.0321326 , -0.00134048,  0.07777762]), core_orientation=Quaternion([ 0.98988802, -0.00484149, -0.13979474, -0.02357341])), BodyState(core_position=Vector3([-0.03098451, -0.00549942,  0.07817759]), core_orientation=Quaternion([ 0.99050913, -0.00143455, -0.1373421 ,  0.00517284])), BodyState(core_position=Vector3([-0.02297623, -0.02088522,  0.07960103]), core_orientation=Quaternion([ 0.98477117,  0.0149344 , -0.12708531,  0.11769463])), BodyState(core_position=Vector3([-0.02037368, -0.03826418,  0.07857319]), core_orientation=Quaternion([ 0.96338675,  0.03278379, -0.13085443,  0.23170738])), BodyState(core_position=Vector3([-0.02039697, -0.05091247,  0.07627861]), core_orientation=Quaternion([ 0.94093767,  0.04687099, -0.1428996 ,  0.30334654]))]"]
    test_str = test_list[0]
    print(compute_balance_from_str(test_str, len(test_str)))
